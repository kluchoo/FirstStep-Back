{
  "swagger": "2.0",
  "info": {
    "title": "FirstStep API",
    "description": "API documentation for FirstStep",
    "version": "1.0.0"
  },
  "basePath": "/",
  "schemes": ["http"],
  "tags": [
    {
      "name": "courses",
      "description": "Course operations"
    },
    {
      "name": "auth",
      "description": "Authentication operations"
    },
    {
      "name": "ai",
      "description": "AI operations"
    },
    {
      "name": "Files",
      "description": "File operations"
    },
    {
      "name": "tests",
      "description": "Test operations"
    }
  ],
  "securityDefinitions": {
    "bearerAuth": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization"
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["auth"],
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                },
                "nickname": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["auth"],
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/auth/authenticate": {
      "get": {
        "tags": ["auth"],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/ai/ask": {
      "post": {
        "tags": ["ai"],
        "description": "Send a prompt to the AI model",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "messages": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "role": {
                        "type": "string",
                        "example": "user"
                      },
                      "content": {
                        "type": "string",
                        "example": "Hello, AI!"
                      }
                    }
                  },
                  "example": [
                    {
                      "role": "user",
                      "content": "Hello, AI!"
                    },
                    {
                      "role": "assistant",
                      "content": "How can I help you?"
                    }
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "AI response",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Hello, how can I assist you?"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Invalid input"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Something went wrong"
                }
              }
            }
          }
        }
      }
    },
    "/courses": {
      "get": {
        "tags": ["courses"],
        "summary": "Get all courses",
        "description": "Retrieve a list of all available courses.",
        "responses": {
          "200": {
            "description": "List of courses",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "example": 1
                  },
                  "title": {
                    "type": "string",
                    "example": "Introduction to Programming"
                  },
                  "description": {
                    "type": "string",
                    "example": "Learn the basics of programming."
                  },
                  "difficultyLevel": {
                    "type": "string",
                    "enum": ["BASIC", "INTERMEDIATE", "ADVANCED"],
                    "example": "BASIC"
                  },
                  "creationDate": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2023-01-01T00:00:00Z"
                  },
                  "modificationDate": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2023-01-02T00:00:00Z"
                  },
                  "studentCount": {
                    "type": "integer",
                    "example": 100
                  },
                  "status": {
                    "type": "string",
                    "enum": ["DRAFT", "PUBLISHED", "ARCHIVED"],
                    "example": "PUBLISHED"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Unauthorized access"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Internal server error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["courses"],
        "summary": "Create new course",
        "description": "Create a new course in the system",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "example": "Introduction to Python"
                },
                "description": {
                  "type": "string",
                  "example": "Learn Python programming from scratch"
                },
                "difficultyLevel": {
                  "type": "string",
                  "enum": ["BASIC", "INTERMEDIATE", "ADVANCED"],
                  "example": "BASIC"
                },
                "status": {
                  "type": "string",
                  "enum": ["DRAFT", "PUBLISHED", "ARCHIVED"],
                  "example": "DRAFT"
                }
              },
              "required": ["title", "difficultyLevel", "status"]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Course created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "example": 1
                },
                "title": {
                  "type": "string",
                  "example": "Introduction to Python"
                },
                "description": {
                  "type": "string",
                  "example": "Learn Python programming from scratch"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Invalid input data"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/courses/{nickname}": {
      "get": {
        "tags": ["courses"],
        "summary": "Get user courses",
        "description": "Retrieve courses created by a specific user",
        "parameters": [
          {
            "name": "nickname",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User nickname"
          }
        ],
        "responses": {
          "200": {
            "description": "List of user courses",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Course"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/courses/id/{id}": {
      "get": {
        "tags": ["courses"],
        "summary": "Get course by ID",
        "description": "Retrieve a specific course by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "Course ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Course details",
            "schema": {
              "$ref": "#/definitions/Course"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Course not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/courses/{id}": {
      "put": {
        "tags": ["courses"],
        "summary": "Update course",
        "description": "Update an existing course by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "Course ID to update"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "example": "Updated Python Course"
                },
                "description": {
                  "type": "string",
                  "example": "Updated course description"
                },
                "difficultyLevel": {
                  "type": "string",
                  "enum": ["BASIC", "INTERMEDIATE", "ADVANCED"],
                  "example": "INTERMEDIATE"
                },
                "status": {
                  "type": "string",
                  "enum": ["DRAFT", "PUBLISHED", "ARCHIVED"],
                  "example": "PUBLISHED"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Course updated successfully",
            "schema": {
              "$ref": "#/definitions/Course"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden - Not the course owner"
          },
          "404": {
            "description": "Course not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": ["courses"],
        "summary": "Delete course",
        "description": "Delete a course by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "Course ID to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Course deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden - Not the course owner"
          },
          "404": {
            "description": "Course not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/courses/{courseId}/elements": {
      "get": {
        "tags": ["courses"],
        "summary": "Get course elements",
        "description": "Retrieve all elements of a specific course by its ID.",
        "parameters": [
          {
            "name": "courseId",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID of the course"
          }
        ],
        "responses": {
          "200": {
            "description": "List of course elements",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "example": 1
                  },
                  "type": {
                    "type": "string",
                    "enum": ["HEADER", "TEXT", "IMAGE", "VIDEO", "FILE", "CODE"],
                    "example": "TEXT"
                  },
                  "content": {
                    "type": "string",
                    "example": "This is a course element content."
                  },
                  "order": {
                    "type": "integer",
                    "example": 1
                  },
                  "additionalData": {
                    "type": "object",
                    "example": {
                      "key": "value"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Course not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": ["courses"],
        "summary": "Set course elements",
        "description": "Update existing elements and create new elements for a course. Elements not included in the request will be deleted.",
        "parameters": [
          {
            "name": "courseId",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID of the course"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "elements": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "ID of the element (optional for new elements)",
                        "example": 1
                      },
                      "type": {
                        "type": "string",
                        "enum": ["HEADER", "TEXT", "IMAGE", "VIDEO", "FILE", "CODE"],
                        "example": "TEXT"
                      },
                      "content": {
                        "type": "string",
                        "example": "This is the content of the course element."
                      },
                      "order": {
                        "type": "integer",
                        "example": 1
                      }
                    },
                    "required": ["type", "content", "order"]
                  }
                }
              },
              "required": ["elements"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Elements updated successfully",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "example": 1
                  },
                  "type": {
                    "type": "string",
                    "enum": ["HEADER", "TEXT", "IMAGE", "VIDEO", "FILE", "CODE"],
                    "example": "TEXT"
                  },
                  "content": {
                    "type": "string",
                    "example": "This is the content of the course element."
                  },
                  "order": {
                    "type": "integer",
                    "example": 1
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Course not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/files/upload": {
      "post": {
        "summary": "Przesyła nowy plik (obraz)",
        "tags": ["Files"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "consumes": ["multipart/form-data"],
        "parameters": [
          {
            "in": "formData",
            "name": "file",
            "type": "file",
            "required": true,
            "description": "Plik do przesłania (obraz)"
          }
        ],
        "responses": {
          "201": {
            "description": "Plik został pomyślnie przesłany"
          },
          "400": {
            "description": "Błędne żądanie"
          },
          "401": {
            "description": "Brak autoryzacji"
          }
        }
      }
    },
    "/files": {
      "get": {
        "summary": "Pobiera listę plików użytkownika",
        "tags": ["Files"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Lista plików użytkownika"
          },
          "401": {
            "description": "Brak autoryzacji"
          }
        }
      }
    },
    "/files/{id}": {
      "delete": {
        "summary": "Usuwa plik",
        "tags": ["Files"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID pliku do usunięcia"
          }
        ],
        "responses": {
          "200": {
            "description": "Plik został pomyślnie usunięty"
          },
          "401": {
            "description": "Brak autoryzacji"
          },
          "404": {
            "description": "Plik nie został znaleziony"
          }
        }
      }
    },
    "/courses/categories": {
      "get": {
        "tags": ["courses"],
        "summary": "Get all categories",
        "description": "Retrieve a list of all available course categories.",
        "responses": {
          "200": {
            "description": "List of categories",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": { "type": "integer", "example": 1 },
                  "name": { "type": "string", "example": "Programowanie" },
                  "description": { "type": "string", "example": "Kursy związane z programowaniem" }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "error": { "type": "string", "example": "Internal server error" }
              }
            }
          }
        }
      }
    },
    "/tests": {
      "get": {
        "tags": ["tests"],
        "summary": "Get all tests",
        "description": "Retrieve a list of all available tests",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of all tests",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": { "type": "integer", "example": 1 },
                  "creatorId": { "type": "integer", "example": 1 },
                  "courseId": { "type": "integer", "example": 1 },
                  "title": { "type": "string", "example": "Test końcowy kursu Python" },
                  "duration": { "type": "integer", "example": 60 },
                  "creationDate": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2023-01-01T00:00:00Z"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "error": { "type": "string", "example": "Unauthorized access" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "message": { "type": "string", "example": "No tests found" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "error": { "type": "string", "example": "Internal server error" }
              }
            }
          }
        }
      }
    },
    "/tests/{id}": {
      "get": {
        "tags": ["tests"],
        "summary": "Get test by ID",
        "description": "Retrieve a specific test by its ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "Test ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Test details",
            "schema": {
              "type": "object",
              "properties": {
                "id": { "type": "integer", "example": 1 },
                "creatorId": { "type": "integer", "example": 1 },
                "courseId": { "type": "integer", "example": 1 },
                "title": { "type": "string", "example": "Test końcowy kursu Python" },
                "duration": { "type": "integer", "example": 60 },
                "creationDate": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2023-01-01T00:00:00Z"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "error": { "type": "string", "example": "Unauthorized access" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "message": { "type": "string", "example": "Test not found" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "error": { "type": "string", "example": "Internal server error" }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Course": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "example": 1
        },
        "title": {
          "type": "string",
          "example": "Introduction to Programming"
        },
        "description": {
          "type": "string",
          "example": "Learn the basics of programming."
        },
        "difficultyLevel": {
          "type": "string",
          "enum": ["BASIC", "INTERMEDIATE", "ADVANCED"],
          "example": "BASIC"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time",
          "example": "2023-01-01T00:00:00Z"
        },
        "modificationDate": {
          "type": "string",
          "format": "date-time",
          "example": "2023-01-02T00:00:00Z"
        },
        "studentCount": {
          "type": "integer",
          "example": 100
        },
        "status": {
          "type": "string",
          "enum": ["DRAFT", "PUBLISHED", "ARCHIVED"],
          "example": "PUBLISHED"
        }
      }
    }
  }
}
