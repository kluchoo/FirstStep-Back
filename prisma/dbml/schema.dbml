//// ------------------------------------------------------
//// THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
//// ------------------------------------------------------

Table Users {
  id BigInt [pk, increment]
  nickname String [unique, not null]
  email String [unique, not null]
  password String [not null]
  lastLoginDate DateTime
  role Role [not null, default: 'STUDENT']
  createdCourses Courses [not null]
  createdTests Tests [not null]
  courseEnrollments Enrollments [not null]
  testResults TestResults [not null]
}

Table Categories {
  id BigInt [pk, increment]
  name String [unique, not null]
  description String
  courses Courses [not null]
}

Table Courses {
  id BigInt [pk, increment]
  creatorId BigInt [not null]
  categoryId BigInt [not null]
  testId BigInt
  title String [not null]
  description String
  difficultyLevel Difficulty [not null]
  creationDate DateTime [default: `now()`, not null]
  modificationDate DateTime [default: `now()`, not null]
  studentCount Int [not null, default: 0]
  status CourseStatus [not null, default: 'DRAFT']
  creator Users [not null]
  category Categories [not null]
  test Tests
  courseElements CourseElements [not null]
  enrollments Enrollments [not null]
  courseOrder CourseElementOrder
}

Table Tests {
  id BigInt [pk, increment]
  creatorId BigInt [not null]
  courseId BigInt [unique, not null]
  title String [not null]
  duration Int [not null]
  creationDate DateTime [default: `now()`, not null]
  creator Users [not null]
  course Courses [not null]
  questions TestQuestions [not null]
  testResults TestResults [not null]
}

Table TestQuestions {
  id BigInt [pk, increment]
  testId BigInt [not null]
  content String [not null]
  questionType QuestionType [not null]
  points Int [not null, default: 1]
  order Int [not null]
  test Tests [not null]
  answers Answers [not null]
}

Table Answers {
  id BigInt [pk, increment]
  questionId BigInt [not null]
  content String [not null]
  isCorrect Boolean [not null, default: false]
  order Int [not null]
  question TestQuestions [not null]
}

Table CourseElementOrder {
  courseId BigInt [pk]
  lastOrder Int [not null, default: 1]
  course Courses [not null]
}

Table CourseElements {
  id BigInt [pk, increment]
  courseId BigInt [not null]
  type ElementType [not null]
  content String [not null]
  order Int [not null]
  additionalData Json
  course Courses [not null]
}

Table Enrollments {
  id BigInt [pk, increment]
  courseId BigInt [not null]
  userId BigInt [not null]
  enrollmentDate DateTime [default: `now()`, not null]
  status EnrollmentStatus [not null, default: 'ACTIVE']
  progress Int [not null, default: 0]
  course Courses [not null]
  user Users [not null]

  indexes {
    (courseId, userId) [unique]
  }
}

Table TestResults {
  id BigInt [pk, increment]
  testId BigInt [not null]
  userId BigInt [not null]
  result Int [not null]
  startDate DateTime [not null]
  endDate DateTime
  status ResultStatus [not null, default: 'IN_PROGRESS']
  test Tests [not null]
  user Users [not null]
}

Enum Role {
  ADMIN
  TEACHER
  STUDENT
}

Enum Difficulty {
  BASIC
  INTERMEDIATE
  ADVANCED
}

Enum CourseStatus {
  DRAFT
  PUBLISHED
  ARCHIVED
}

Enum QuestionType {
  SINGLE_CHOICE
  MULTIPLE_CHOICE
  TRUE_FALSE
}

Enum ElementType {
  HEADER
  TEXT
  IMAGE
  VIDEO
  FILE
  CODE
}

Enum EnrollmentStatus {
  ACTIVE
  COMPLETED
  ABANDONED
}

Enum ResultStatus {
  IN_PROGRESS
  FINISHED
  GRADED
}

Ref: Courses.creatorId > Users.id

Ref: Courses.categoryId > Categories.id

Ref: Tests.creatorId > Users.id

Ref: Tests.courseId - Courses.id

Ref: TestQuestions.testId > Tests.id

Ref: Answers.questionId > TestQuestions.id

Ref: CourseElementOrder.courseId - Courses.id

Ref: CourseElements.courseId > Courses.id

Ref: Enrollments.courseId > Courses.id

Ref: Enrollments.userId > Users.id

Ref: TestResults.testId > Tests.id

Ref: TestResults.userId > Users.id