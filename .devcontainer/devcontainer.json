{
  "name": "FirstStep Backend",
  "build": {
    "dockerfile": "Dockerfile"
  },
  "features": {
    "ghcr.io/devcontainers/features/docker-in-docker:2": {}
  },
  "customizations": {
    "vscode": {
      "settings": {
        "workbench.colorTheme": "Default Dark Modern",
        "git.autofetch": true,
        "git.autofetchPeriod": 60,
        "editor.formatOnSave": true,
        "typescript.suggest.paths": false,
        "javascript.suggest.paths": false
      },
      "extensions": [
        "MS-CEINTL.vscode-language-pack-pl",
        "aaron-bond.better-comments",
        "GitHub.copilot-chat",
        "github.vscode-github-actions",
        "usernamehw.errorlens",
        "oven.bun-vscode",
        "yzhang.markdown-all-in-one",
        "mhutchie.git-graph",
        "christian-kohler.path-intellisense",
        "dbaeumer.vscode-eslint",
        "mikestead.dotenv",
        "steoates.autoimport",
        "esbenp.prettier-vscode"
      ]
    }
  },
  "containerEnv": {
    "DATABASE_URL": "postgresql://postgres:secret@FirstStep:5432/postgres?schema=public"
  },
  "remoteUser": "node",
  "postStartCommand": [
    "bash",
    "-c",
    "mkdir -p .git/hooks && echo '#!/bin/sh\necho \"Running pre-commit checks...\"\n\n# Run eslint\nbunx eslint --fix\n\n# Type check\nbunx tsc --noEmit\n\n# Exit with status\nif [ $? -ne 0 ]; then\n    echo \"Errors found, aborting commit\"\n    exit 1\nfi\n\nexit 0' > .git/hooks/pre-commit && chmod +x .git/hooks/pre-commit"
  ],
  "initializeCommand": [
    "bash",
    "-c",
    "if ! docker network ls | grep -q \"FirstStep\"; then docker network create FirstStep; fi && if ! docker ps -a | grep -q \"FirstStep\"; then docker run -d --name FirstStep --network FirstStep -e POSTGRES_PASSWORD=secret postgres; else docker start FirstStep || true; fi"
  ]
}
